#Spring DataSource
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:myDb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false;MV_STORE=FALSE
spring.datasource.username=sa
spring.datasource.password=

spring.h2.console.settings.web-allow-others=true
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = create-drop
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect

#server.port=8084
#spring.application.name=auth

#bootsrap.properties

eureka.client.service-url.defaultZone=http://${REGISTRY_HOST:localhost}:${REGISTRY_PORT:8761}/eureka/
eureka.client.service-url.healthcheck.enabled=true
eureka.instance.prefer-ip-address=true

# dodato zbog greske, pokrene aplikaciju ali ne moze da je regisruje
#eureka.client.register-with-eureka=false
#eureka.client.fetch-registry=false

server.port=8084
spring.application.name=${SPRINGBOOT_APP_NAME:auth}

# security
#server.ssl.enabled=true

#server.ssl.key-store-type=JKS
#server.ssl.key-store=classpath:auth.jks
#server.ssl.key-store-password=password
#server.ssl.key-alias=7
#server.ssl.key-password=password

# nalazi se kod main metode
#server.ssl.trust-store-type=JKS
#server.ssl.trust-store=classpath:auth.jks
#server.ssl.trust-store-password=password

# promeni u configuracionoj klasi
#security.require-ssl=true

#axon.axonserver.servers=${AXON_HOST:localhost}

# HTTPS
# The format used for the keystore. It could be set to JKS in case it is a JKS file
#server.ssl.enabled=true
#server.ssl.algorithm==${TLS_VERSION:TLSv1.2}

#server.ssl.key-store-type=JKS
#server.ssl.key-store=src/main/resources/auth.jks
#server.ssl.key-store-password=password
#server.ssl.key-alias=7
#server.ssl.key-password=password

#server.ssl.trust-store-type=JKS
#server.ssl.trust-store=src/main/resources/zuul.jks
#server.ssl.trust-store-password=password

#server.ssl.client-auth=need
